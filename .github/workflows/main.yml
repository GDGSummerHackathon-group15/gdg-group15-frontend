name: Build & Deploy AWS

on:
  push:
    branches:
      - main

env:
  CACHED_DEPENDENCY_PATHS: |
    ${{ github.workspace }}/node_modules
    ${{ github.workspace }}/packages/**/node_modules
  # DEPENDENCY_CACHE_KEY: can't be set here because we don't have access to yarn.lock

  CACHED_BUILD_PATHS: |
    ${{ github.workspace }}/packages/**/build
    ${{ github.workspace }}/packages/**/dist
    ${{ github.workspace }}/packages/**/esm
  BUILD_CACHE_KEY: ${{ github.sha }}

jobs:
  install_dependencies:
    name: Install Project Dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout current commit (${{ github.sha }})
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Compute dependency cahce key
        id: compute_lockfile_hash
        run: echo "::set-output name=hash::${{ hashFiles('yarn.lock') }}"

      - name: Check dependency cache key
        uses: actions/cache@v2
        id: yarn_cache
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ steps.compute_lockfile_hash.outputs.hash }}

      - name: Install dependencies
        if: steps.yarn_cache.outputs.cache-hit == ''
        run: yarn install

    outputs:
      dependency_cache_key: ${{ steps.compute_lockfile_hash.outputs.hash }}

  build:
    name: Build Application
    needs: install_dependencies
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout current commit (${{ github.sha }})
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Check dependency cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CACHED_DEPENDENCY_PATHS }}
          key: ${{ needs.install_dependencies.outputs.dependency_cache_key }}

      - name: Check build cache
        uses: actions/cache@v2
        id: cache_built_packages
        with:
          path: ${{ env.CACHED_BUILD_PATHS }}
          key: ${{ env.BUILD_CACHE_KEY }}

      - name: Build application
        if: steps.cache_built_packages.outputs.cache-hit == ''
        env:
          GENERATE_SOURCEMAP: false
          REACT_APP_BASEURI: /
        run: yarn build

      - run: tar -zcvf build.tar.gz build

      - name: Upload build directory to artifact
        uses: 'actions/upload-artifact@v2'
        with:
          name: build.tar.gz
          path: build.tar.gz
          retention-days: 1

  aws_script:
    name: Deploy AWS Setup Script
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env: 
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ap-northeast-2
      AWS_S3_PATH: s3://gdgsummerhackathon-group15-frontend
      AWS_CLOUDFRONT_DISTRIBUTE_ID: E2M7130WOF788V

    steps:
      - name: Download build file in artifact
        uses: actions/download-artifact@v2
        id: download
        with:
          name: build.tar.gz

      - run: tar -xvf ${{ steps.download.outputs.download-path }}/build.tar.gz

      - name: Upload S3 Bucket
        run: |
          aws s3 cp \
            --recursive \
            --region ${{ env.AWS_REGION }} \
            build ${{ env.AWS_S3_PATH }}
      - name: Invalidate cloudfront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.AWS_CLOUDFRONT_DISTRIBUTE_ID }} \
            --paths "/*"
